eval("//# sourceURL=vendor/ember-cli/loader.js");

;thisBeforeEval = this; eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;thisBeforeEval = this; eval("define(\"dummy/initializers/export-application-global\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/export-application-global.js");

;thisBeforeEval = this; eval("\nvar __cov_NhQL4yCpGnQCB8fgT$uIgA = (Function(\'return thisBeforeEval\'))();\nif (!__cov_NhQL4yCpGnQCB8fgT$uIgA.__coverage__) { __cov_NhQL4yCpGnQCB8fgT$uIgA.__coverage__ = {}; }\n__cov_NhQL4yCpGnQCB8fgT$uIgA = __cov_NhQL4yCpGnQCB8fgT$uIgA.__coverage__;\nif (!(__cov_NhQL4yCpGnQCB8fgT$uIgA[\'/code/orig/ember-cli-istanbul/big.js\'])) {\n   __cov_NhQL4yCpGnQCB8fgT$uIgA[\'/code/orig/ember-cli-istanbul/big.js\'] = {\"path\":\"/code/orig/ember-cli-istanbul/big.js\",\"s\":{\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0},\"b\":{},\"f\":{\"1\":0,\"2\":0,\"3\":0},\"fnMap\":{\"1\":{\"name\":\"(anonymous_1)\",\"line\":3,\"loc\":{\"start\":{\"line\":3,\"column\":2},\"end\":{\"line\":3,\"column\":41}}},\"2\":{\"name\":\"(anonymous_2)\",\"line\":8,\"loc\":{\"start\":{\"line\":8,\"column\":15},\"end\":{\"line\":8,\"column\":26}}},\"3\":{\"name\":\"(anonymous_3)\",\"line\":13,\"loc\":{\"start\":{\"line\":13,\"column\":15},\"end\":{\"line\":13,\"column\":26}}}},\"statementMap\":{\"1\":{\"start\":{\"line\":1,\"column\":0},\"end\":{\"line\":17,\"column\":5}},\"2\":{\"start\":{\"line\":5,\"column\":4},\"end\":{\"line\":5,\"column\":43}},\"3\":{\"start\":{\"line\":7,\"column\":4},\"end\":{\"line\":16,\"column\":7}},\"4\":{\"start\":{\"line\":9,\"column\":8},\"end\":{\"line\":9,\"column\":24}},\"5\":{\"start\":{\"line\":10,\"column\":8},\"end\":{\"line\":10,\"column\":33}},\"6\":{\"start\":{\"line\":14,\"column\":8},\"end\":{\"line\":14,\"column\":33}}},\"branchMap\":{},\"code\":[\"(function () { define(\\\"dummy/models/doubler\\\", \",\"  [\\\"ember\\\",\\\"exports\\\"],\",\"  function(__dependency1__, __exports__) {\",\"    \\\"use strict\\\";\",\"    var Ember = __dependency1__[\\\"default\\\"];\",\"\",\"    __exports__[\\\"default\\\"] = Ember.Object.extend({\",\"      doubled: function() {\",\"        window.abc = 42;\",\"        return this.get(\'num\')*2;\",\"      }.property(\\\"num\\\"),\",\"\",\"      tripled: function() {\",\"        return this.get(\'num\')*3;\",\"      }.property(\\\"num\\\")\",\"    });\",\"  });\",\"}());\"]};\n}\n__cov_NhQL4yCpGnQCB8fgT$uIgA = __cov_NhQL4yCpGnQCB8fgT$uIgA[\'/code/orig/ember-cli-istanbul/big.js\'];\n__cov_NhQL4yCpGnQCB8fgT$uIgA.s[\'1\']++;\ndefine(\'dummy/models/doubler\', [\n    \'ember\',\n    \'exports\'\n], function (__dependency1__, __exports__) {\n    \'use strict\';\n    __cov_NhQL4yCpGnQCB8fgT$uIgA.f[\'1\']++;\n    __cov_NhQL4yCpGnQCB8fgT$uIgA.s[\'2\']++;\n    var Ember = __dependency1__[\'default\'];\n    __cov_NhQL4yCpGnQCB8fgT$uIgA.s[\'3\']++;\n    __exports__[\'default\'] = Ember.Object.extend({\n        doubled: function () {\n            __cov_NhQL4yCpGnQCB8fgT$uIgA.f[\'2\']++;\n            __cov_NhQL4yCpGnQCB8fgT$uIgA.s[\'4\']++;\n            window.abc = 42;\n            __cov_NhQL4yCpGnQCB8fgT$uIgA.s[\'5\']++;\n            return this.get(\'num\') * 2;\n        }.property(\'num\'),\n        tripled: function () {\n            __cov_NhQL4yCpGnQCB8fgT$uIgA.f[\'3\']++;\n            __cov_NhQL4yCpGnQCB8fgT$uIgA.s[\'6\']++;\n            return this.get(\'num\') * 3;\n        }.property(\'num\')\n    });\n});\n//# sourceURL=dummy/models/doubler.js");

;thisBeforeEval = this; eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;thisBeforeEval = this; eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>Welcome to Ember.js</h2>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/dummy/tests/unit/smoke-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit\');\n    test(\'dummy/tests/unit/smoke-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/smoke-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/smoke-test.jshint.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/models/doubler.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/doubler.js should pass jshint\', function() { \n      ok(true, \'models/doubler.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/models/doubler.jshint.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

;thisBeforeEval = this; eval("define(\"dummy/tests/unit/smoke-test\", \n  [\"ember-qunit\",\"dummy/models/doubler\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var Doubler = __dependency2__[\"default\"];\n\n    module(\"doubler\");\n\n    test(\"smoke\", function() {\n      var doubler = Doubler.create({num: 3});\n      var res = doubler.get(\'doubled\');\n      equal(res,6);\n    });\n\n    function TestObj(inputTree, options) {\n      //console.log(\"here\");\n    }\n\n    //TestObj.prototype = Object.create()\n    TestObj.prototype.constructor = TestObj;\n\n    TestObj.prototype.getNum = function() {\n      return this.num;\n    };\n\n    TestObj.prototype.getNumEval = function() {\n      var self = this;\n      var res = eval(\"var thing = (function() { return self; })(); thing.num\");\n      return res;\n    };\n\n    test(\"eval smoke\", function() {\n      var obj = new TestObj();\n      obj.num = 14;\n      equal(obj.getNum(),14);\n      equal(obj.getNumEval(),14);\n    });\n\n    asyncTest(\"wait here\", function() {\n      setTimeout(function() {\n        QUnit.start();\n        equal(2,2);\n      },99999999999999999);\n    });\n  });//# sourceURL=dummy/tests/unit/smoke-test.js");
